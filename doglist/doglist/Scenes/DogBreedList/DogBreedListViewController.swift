//
//  DogBreedListViewController.swift
//  doglist
//
//  Created by Hélio Mesquita on 25/05/19.
//  Copyright (c) 2019 Hélio Mesquita. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DogBreedsListDisplayLogic: class {
  func showDogPhotoList()
}

class DogBreedsListViewController: UIViewController {

  var interactor: DogBreedsListBusinessLogic?
  var router: (DogBreedsListRoutingLogic & DogBreedsListDataPassing)?

  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)   {
    super.init(nibName: R.storyboard.main.breedList.identifier, bundle: nibBundleOrNil)
    setup()
  }

  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }

  @IBOutlet weak var tableView: UITableView!

  private func setup() {
    let viewController = self
    let interactor = DogBreedsListInteractor()
    let presenter = DogBreedsListPresenter()
    let router = DogBreedsListRouter()
    viewController.interactor = interactor
    viewController.router = router
    presenter.viewController = viewController
    interactor.presenter = presenter
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  override func viewDidLoad() {
    super.viewDidLoad()
    tableView.delegate = self
    tableView.dataSource = self
  }

}

extension DogBreedsListViewController: DogBreedsListDisplayLogic {

  func showDogPhotoList() {
    router?.routeToDogPhotoList()
  }

}

extension DogBreedsListViewController: UITableViewDataSource, UITableViewDelegate {

  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return interactor?.numberOfRows ?? 0
  }

  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCell(withIdentifier: "breedCell", for: indexPath)
    cell.textLabel?.text = interactor?.cellForRow(at: indexPath.row)
    return cell
  }

  func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
    tableView.deselectRow(at: indexPath, animated: true)
    interactor?.didSelect(at: indexPath.row)
  }

}
