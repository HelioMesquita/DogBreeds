//
//  DogPhotoListInteractor.swift
//  doglist
//
//  Created by Hélio Mesquita on 25/05/19.
//  Copyright (c) 2019 Hélio Mesquita. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DogPhotoListBusinessLogic {
  var numberOfRows: Int { get }
  func cellForRow(at index: Int) -> String
  func load()
}

protocol DogPhotoListDataStore {
  var session: Login.Session? { get set }
}

class DogPhotoListInteractor: DogPhotoListBusinessLogic, DogPhotoListDataStore {

  var session: Login.Session?
  var presenter: DogPhotoListPresentationLogic?
  var response: DogPhotoList.Response?
  let worker: DogPhotoListWorker

  var numberOfRows: Int {
    return response?.list.count ?? 0
  }

  init(worker: DogPhotoListWorker = DogPhotoListWorker()) {
    self.worker = worker
  }

  func cellForRow(at index: Int) -> String {
    return response?.list[index] ?? ""
  }

  func load() {
    presenter?.presentTitle(session?.breed.rawValue)
    guard let session = session else { return }
    worker.getPhotoList(session: session).done(handleSuccess).catch(handleFailure)
  }

  func handleSuccess(_ response: DogPhotoList.Response) {
    self.response = response
    presenter?.reloadCollection()
  }

  func handleFailure(_ error: Error) {
    presenter?.presentRequestFailureAlert()
  }

}
